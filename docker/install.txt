#官方建议内核版本高于3.0.8，依赖ausfs模块
# 操作系统 CentOS6

#准备工作
#Selinux和LXC有冲突，禁用Selinux。

#方式1，yum安装包含aufs的内核

#配置hop5.in源
wget http://www.hop5.in/yum/el6/hop5.repo  -P /etc/yum.repos.d
yum install kernel-ml-aufs kernel-ml-aufs-devel
#用新内核启动系统

#配置epel源
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6

#安装docker,CentOS6中，docker的rpm包名为docker-io,若系统中已安装docker，先卸载之。
rpm -qa | grep docker
rpm -e xx
yum install docker-io


##方式2 ，手动升级内核，并启用aufs模块

#获取内核
wget https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.19.1.tar.xz -P /Data/software
tar xf linux-3.19.1.tar.xz  -C /usr/src

#获取aufs源码
cd /Data/software
git clone git://git.code.sf.net/p/aufs/aufs3-standalone aufs3-standalone.git
cd aufs3-standalone.git
git branch -r # 显示所有分支，以版本号区分
git checkout aufs3.19 #选择与内核版本号一致的分支


#将aufs源码合并进linux内核源码
cd /usr/src/linux-3.19.1
patch -p1 < /Data/software/aufs3-standalone.git/aufs3-kbuild.patch
patch -p1 < /Data/software/aufs3-standalone.git/aufs3-base.patch
patch -p1 < /Data/software/aufs3-standalone.git/aufs3-mmap.patch
patch -p1 < /Data/software/aufs3-standalone.git/aufs3-standalone.patch
cp -a /Data/software/aufs3-standalone.git/Documentation/*  Documentation/
cp -a /Data/software/aufs3-standalone.git/fs/*  fs/
cp -a /Data/software/aufs3-standalone.git/include/uapi/linux/aufs_type.h/*  include/uapi/linux/

#开始编译内核
# make menuconfig依赖ncurses-devel，
yum install ncurses-devel -y

make menuconfig #aufs模块(File systems->Miscellaneous filesystems->Aufs support)、NAT模块(Networking support->Networking options->Netfilter->Netfilter Configuration)、addrtype模块(Core Netfilter Configuration->Xtables matches->"addrtype" address type match support)必须加载(XT_MATCH_ADDRTYPE)

#编译环境
yum install gcc gcc-c++ bc libtool hmaccalc zlib-devel binutils-devel elfutils-libelf-devel

make

make modules

make modules_install

make install

make headers_install


#若需重新编译，执行以下,之后重复make menuconfig、make、make modules ……
make mrproper
make clean

# 以新内核启动

#配置epel源

#安装docker
yum install docker-io


# Binaries 如果追求最新版本，可以直接从github获取最新的二进制docker

# Get the docker binary:
wget https://get.docker.com/builds/Linux/x86_64/docker-latest -O docker

chmod +x docker

# Note: If you have trouble downloading the binary, you can also get the smaller compressed release file: https://get.docker.com/builds/Linux/x86_64/docker-latest.tgz

# Run the docker daemon
# start the docker in daemon mode from the directory you unpacked
./docker -d &




##error

出现以下错误：
[root@osd2 ~]# service docker start
Starting cgconfig service: Error: cannot mount memory to /cgroup/memory: No such file or directory
/sbin/cgconfigparser; error loading /etc/cgconfig.conf: Cgroup mounting failed
Failed to parse /etc/cgconfig.conf                         [FAILED]
Starting docker:	                                   [  OK  ]
[root@osd2 ~]# service docker start
[root@osd2 ~]# service docker status
docker dead but pid file exists
查了一下cgconfig：
[root@osd2 ~]#  /etc/init.d/cgconfig status
Stopped
[root@osd2 ~]# /etc/init.d/cgconfig start
Starting cgconfig service: Error: cannot mount memory to /cgroup/memory: No such file or directory
/sbin/cgconfigparser; error loading /etc/cgconfig.conf: Cgroup mounting failed
Failed to parse /etc/cgconfig.conf                         [FAILED]
[root@osd2 ~]# ls /cgroup/
blkio  devices  freezer  memory  net_cls
memory是有的，但就是出错，需要修改：
[root@osd2 ~]# cat /etc/cgconfig.conf
#
#  Copyright IBM Corporation. 2007
#
#  Authors:	Balbir Singh <balbir@linux.vnet.ibm.com>
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2.1 of the GNU Lesser General Public License
#  as published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See man cgconfig.conf for further details.
#
# By default, mount all controllers to /cgroup/<controller>

mount {
	cpuset	= /cgroup/cpuset;
	cpu	= /cgroup/cpu;
	cpuacct	= /cgroup/cpuacct;
#	memory	= /cgroup/memory;
	devices	= /cgroup/devices;
	freezer	= /cgroup/freezer;
	net_cls	= /cgroup/net_cls;
	blkio	= /cgroup/blkio;
}
