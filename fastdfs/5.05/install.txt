##FastDFS_v5.05 On CentOS-6.5##

##http://sourceforge.net/projects/fastdfs/files/##

##依赖perl环境，保证perl已安装#

##libfastcommon#
#https://github.com/happyfish100/libfastcommon
unzip libfastcommon-master.zip
cd libfastcommon-master
./make.sh
./make.sh install


# FastDFS <所有机器>
tar zxvf FastDFS_v5.05.tar.gz && cd FastDFS
./make.sh
./make.sh install



## tracker##
##创建fastdfs运行用户
useradd fastdfs

#创建目录，用于存放tracker日志,storage server等信息
mkdir -p /Data/FastDFS
chown -R fastdfs:fastdfs /Data/FastDFS

#cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf,修改以下参数
port=22122
base_path=/Data/FastDFS
run_by_group=fastdfs
run_by_user=fastdfs
use_storage_id = true
storage_ids_filename = storage_ids.conf
id_type_in_filename = id

#cp /Data/software/FastDFS/conf/storage_ids.conf /etc/fdfs
vi /etc/fdfs/storage_ids.conf
# <id>  <group_name>  <ip_or_hostname>
100001   group1  10.10.67.186
100002   group1  10.10.67.187

#启动#
#注意：make.sh默认将二进制文件安装到/usr/bin目录，但安装后的启动脚本却到/usr/local/bin下寻找相关二进制文件，所以要对启动脚本加以修改,如：
vi /etc/init.d/fdfs_trackerd
PRG=/usr/local/bin/fdfs_trackerd ##将/usr/local/bin修改为/usr/bin
sed -i 's#usr/local/bin#/usr/bin#' /etc/init.d/fdfs_trackerd

service fdfs_trackerd start
#/usr/local/bin/fdfs_trackerd /etc/fdfs/tracker.conf 
#查看/Data/FastDFS/logs/tracker.log获取详细信息





## storage ##
##创建运行用户
useradd fastdfs
#创建目录，用于存储文件
mkdir -p /Data/FastDFS
chown -R fastdfs:fastdfs /Data/FastDFS

#cp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf
# vi /etc/fdfs/storage.conf
base_path=/Data/FastDFS
store_path0=/Data/FastDFS
run_by_group=fastdfs
run_by_user=fastdfs
tracker_server=10.10.67.185:22122
http.server_port=8888
#启动#
#注意：make.sh默认将二进制文件安装到/usr/bin目录，但安装后的启动脚本却到/usr/local/bin下寻找相关二进制文件，所以要对启动脚本加以修改,如：
vi /etc/init.d/fdfs_storaged
PRG=/usr/local/bin/fdfs_storaged ##将/usr/local/bin修改为/usr/bin
sed -i 's#usr/local/bin#/usr/bin#' /etc/init.d/fdfs_storaged

service fdfs_storaged start
#/usr/local/bin/fdfs_storaged /etc/fdfs/storage.conf
#storaged启动时会连接tracker的22122端口，如果连接失败则处于僵死状态，注意保证tracker已经启动，并检查防火墙
#storaged启动后会连接其他storage的23000端口，注意检查防火墙
#更多信息查看/Data/FastDFS/logs/storaged.log 


#安装nginx,5.05版本已经取消了内置的HTTP，这里使用轻量级的nginx做为提供HTTP服务#
tar jxvf pcre-8.36.tar.bz2
tar zxvf openssl-1.01.j
tar zxvf fastdfs-nginx-module_v1.16.tar.gz 
#fastdfs-nginx-module的config指定的路径与fastdfs和fastcommon的实际安装路径不符，需先加以修改
vi fastdfs-nginx-module/src/config
CORE_INCS="$CORE_INCS /usr/local/include/fastdfs /usr/local/include/fastcommon/
#上句修改为如下：
CORE_INCS="$CORE_INCS /usr/include/fastdfs /usr/include/fastcommon/


tar zxvf nginx-1.62.tar.gz && cd nginx-1.62
#configure参数可尽量简化，不必要的模块不必添加
./configure --prefix=/Data/app/nginx  --with-pcre=/Data/software/pcre-8.36 --with-openssl=/Data/software/openssl-1.0.1j --with-http_sub_module --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --add-module=../fastdfs-nginx-module/src/
make && make install

# mod_fastdfs.conf
cp fastdfs-nginx-module/src/mod_fastdfs.conf /etc/fdfs
vi /etc/fdfs/mod_fastdfs.conf
#设置以下值，其它保持默认
base_path=/Data/FastDFS
load_fdfs_parameters_from_tracker=false
use_storage_id = true
storage_ids_filename = storage_ids.conf
tracker_server=10.10.67.185:22122
group_name=group1
url_have_group_name = true
store_path_count=1
store_path0=/Data/FastDFS

#storage_ids.conf,与tracker保持一致
#cp /Data/software/FastDFS/conf/storage_ids.conf /etc/fdfs
vi /etc/fdfs/storage_ids.conf
# <id>  <group_name>  <ip_or_hostname>
100001   group1  10.10.67.186
100002   group1  10.10.67.187

#另外注意把/Data/software/FastDFS/conf/下的http.conf和mime.types也拷贝一份到/etc/fdfs下，nginx启动时会用到，因为在mod_fastdfs.conf中Include了http.conf,http.conf又引用了mime.types


#nginx.conf
user fastdfs fastdfs;
events {
    use epoll;
    worker_connections  1024;
}
server {
        listen       8888;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
         location /group1/M00/ {
                alias /Data/FastDFS/data/;
                ngx_fastdfs_module;
        }

#启动nginx


##测试（在tracker上）##
vi /etc/fdfs/client.conf

tracker_server=10.10.67.185:22122
load_fdfs_parameters_from_tracker=false
use_storage_id = true
storage_ids_filename = storage_ids.conf
http.tracker_server_port=8888 #与storage保持一致
#include http.conf

#上传文件#
fdfs_upload_file /etc/fdfs/client.conf /tmp/test.txt 
#输出如下：
group1/M00/00/00/oYYBAFSIY9yAGiaUAAAACVAPOyI336.txt

#获取文件信息
fdfs_file_info /etc/fdfs/client.conf group1/M00/00/00/oYYBAFSIY9yAGiaUAAAACVAPOyI336.txt
#输出如下：
source storage id: 100001
source ip address: 10.10.67.186
file create timestamp: 2014-12-10 23:16:44
file size: 9
file crc32: 1343175458 (0x500F3B22)


#或者使用fdfs_test直接上传文件
fdfs_test /etc/fdfs/client.conf upload /tmp/test.txt
#输出如下：
tracker_query_storage_store_list_without_group: 
        server 1. group_name=, ip_addr=10.10.67.186, port=23000
        server 2. group_name=, ip_addr=10.10.67.187, port=23000

group_name=group1, ip_addr=10.10.67.186, port=23000
storage_upload_by_filename
group_name=group1, remote_filename=M00/00/00/oYYBAFSJWR-AJkhyAAAAAAAAAAA136.txt
source ip address: 10.10.67.186
file timestamp=2014-12-11 16:43:11
file size=0
file crc32=0
example file url: http://10.10.67.186:8888/group1/M00/00/00/oYYBAFSJWR-AJkhyAAAAAAAAAAA136.txt
storage_upload_slave_by_filename
group_name=group1, remote_filename=M00/00/00/oYYBAFSJWR-AJkhyAAAAAAAAAAA136_big.txt
source ip address: 10.10.67.186
file timestamp=2014-12-11 16:43:11
file size=0
file crc32=0
example file url: http://10.10.67.186:8888/group1/M00/00/00/oYYBAFSJWR-AJkhyAAAAAAAAAAA136_big.txt



#访问文件
http://10.10.67.186:8888/group1/M00/00/00/oYYBAFSJWR-AJkhyAAAAAAAAAAA136.txt





##重启
service  xxx restart
#/usr/local/bin/restart.sh /usr/local/bin/fdfs_storaged /etc/fdfs/storage.conf 
#/usr/local/bin/restart.sh /usr/local/bin/fdfs_trackerd /etc/fdfs/tracker.conf 

##查看storage状态，在任意一台storage上执行
/usr/local/bin/fdfs_monitor /etc/fdfs/storage.conf
